<!DOCTYPE html>
<html lang="el">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Melissia BC - Ημερολόγια Αγώνων 2025-26</title>
    <script src="https://unpkg.com/ical.js@1.5.0/build/ical.min.js"></script>
    <link href="https://fonts.googleapis.com/css2?family=Noto+Color+Emoji&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Color Emoji", "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Twemoji Mozilla", sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .container {
            background-color: white;
            border-radius: 10px;
            padding: 30px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            overflow: visible;
        }
        h1 {
            color: #333;
            text-align: center;
            margin-bottom: 10px;
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Color Emoji", "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Twemoji Mozilla", sans-serif;
        }
        .subtitle {
            text-align: center;
            color: #666;
            margin-bottom: 30px;
        }
        .calendar-list {
            list-style: none;
            padding: 0;
        }
        .calendar-item {
            background-color: #f8f9fa;
            border: 1px solid #e9ecef;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 15px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            transition: all 0.3s ease;
            position: relative;
            overflow: visible;
        }
        .calendar-item:hover {
            background-color: #e9ecef;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        }
        .calendar-item.combined {
            background-color: #e7f3ff;
            border: 2px solid #007bff;
            margin-bottom: 25px;
        }
        .calendar-item.combined:hover {
            background-color: #d1e7ff;
        }
        .calendar-info h3 {
            margin: 0 0 5px 0;
            color: #333;
        }
        .calendar-info p {
            margin: 0;
            color: #666;
            font-size: 14px;
        }
        .actions {
            display: flex;
            gap: 10px;
            align-items: center;
            flex-wrap: wrap;
            position: relative;
        }
        @media (max-width: 600px) {
            .calendar-item {
                flex-direction: column;
                align-items: flex-start;
                gap: 15px;
            }
            .actions {
                width: 100%;
                justify-content: center;
                flex-wrap: wrap;
            }
            .quick-add-dropdown .dropdown-content {
                right: auto;
                left: 0;
                min-width: 200px;
            }
        }
        .download-btn, .view-btn, .quick-add-btn {
            background-color: #007bff;
            color: white;
            text-decoration: none;
            padding: 10px 20px;
            border-radius: 5px;
            font-weight: 500;
            transition: background-color 0.3s ease;
            border: none;
            cursor: pointer;
            font-size: 14px;
            display: inline-flex;
            align-items: center;
            gap: 5px;
            white-space: nowrap;
        }
        .btn-ico { display:inline-flex; width:16px; height:16px; align-items:center; justify-content:center; }
        .btn-ico svg { width:16px; height:16px; fill: currentColor; display:block; }
        .view-btn {
            background-color: #28a745;
        }
        .quick-add-btn {
            background-color: #6c757d;
            padding: 10px 20px;
            font-size: 14px;
        }
        .download-btn:hover {
            background-color: #0056b3;
        }
        .view-btn:hover {
            background-color: #1e7e34;
        }
        .quick-add-btn:hover {
            background-color: #545b62;
        }
        .quick-add-dropdown {
            position: relative;
            display: inline-block;
        }
        .dropdown-content {
            display: none;
            position: absolute;
            background-color: white;
            min-width: 200px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.2);
            border-radius: 4px;
            z-index: 100000;
            right: 0;
            top: 100%;
            margin-top: 4px;
            border: 1px solid #ccc;
        }
        .dropdown-content.show {
            display: block;
        }
        .dropdown-content a {
            color: #333;
            padding: 10px 12px;
            text-decoration: none;
            display: block;
            font-size: 14px;
            border-bottom: 1px solid #eee;
            display: flex;
            align-items: center;
            gap: 8px;
        }
        .dropdown-content a:last-child {
            border-bottom: none;
            border-radius: 0 0 4px 4px;
        }
        .dropdown-content a:first-child {
            border-radius: 4px 4px 0 0;
        }
        .dropdown-content a:hover {
            background-color: #f1f1f1;
        }
        .cal-icon {
            width: 18px;
            height: 18px;
            border-radius: 4px;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            font-size: 11px;
            font-weight: 600;
            color: #fff;
            font-family: system-ui, sans-serif;
            letter-spacing: -0.5px;
        }
        .cal-icon.google { background: #4285F4; }
        .cal-icon.outlook { background: #0A61D7; }
        .cal-icon.yahoo { background: #6001D2; }
        .cal-icon.apple { background: linear-gradient(135deg,#5e5e5e,#303030); font-weight:400; position:relative; font-size:0; }
        .cal-icon.apple::before { content:""; position:absolute; left:50%; top:54%; width:10px; height:12px; background:#fff; transform:translate(-50%,-50%); border-radius:52% 52% 48% 48% / 60% 60% 45% 45%; }
        .cal-icon.apple::after { content:""; position:absolute; left:56%; top:14%; width:5px; height:5px; background:#6cc06c; border-radius:60% 60% 0 60%; transform:rotate(-35deg); }
        .dropdown-content a:hover .cal-icon.apple { background:linear-gradient(135deg,#444,#111); }
        .calendar-modal {
            display: none;
            position: fixed;
            z-index: 5000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
        }
        .modal-content {
            background-color: white;
            margin: 2% auto;
            padding: 20px;
            border-radius: 10px;
            width: 90%;
            max-width: 900px;
            max-height: 90%;
            overflow-y: auto;
            position: relative;
        }
        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
            position: absolute;
            right: 20px;
            top: 15px;
            cursor: pointer;
        }
        .close:hover {
            color: #000;
        }
        .event {
            border: 1px solid #ddd;
            border-radius: 8px;
            margin: 10px 0;
            padding: 15px;
            background-color: #f9f9f9;
        }
        .event-title {
            font-weight: bold;
            color: #333;
            margin-bottom: 5px;
        }
        .event-date {
            color: #007bff;
            font-weight: 500;
            margin-bottom: 5px;
        }
        .event-details {
            color: #666;
            font-size: 14px;
        }

        /* Monthly Calendar Styles */
        .calendar-container {
            margin: 20px 0;
        }
        .calendar-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding: 10px;
            background-color: #f8f9fa;
            border-radius: 8px;
        }
        .month-nav-btn {
            background-color: #007bff;
            color: white;
            border: none;
            padding: 8px 12px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
        }
        .month-nav-btn:hover {
            background-color: #0056b3;
        }
        .month-nav-btn:disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }
        .month-title {
            font-size: 18px;
            font-weight: bold;
            color: #333;
        }
        .calendar-grid {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 1px;
            background-color: #ddd;
            border-radius: 8px;
            overflow: hidden;
            margin-bottom: 20px;
        }
        .calendar-day-header {
            background-color: #007bff;
            color: white;
            padding: 10px;
            text-align: center;
            font-weight: bold;
            font-size: 12px;
        }
        .calendar-day {
            background-color: white;
            min-height: 80px;
            padding: 5px;
            position: relative;
            cursor: pointer;
            transition: background-color 0.2s ease;
        }
        .calendar-day:hover {
            background-color: #f8f9fa;
        }
        .calendar-day.other-month {
            background-color: #f5f5f5;
            color: #999;
        }
        .calendar-day.today {
            background-color: #e7f3ff;
            border: 2px solid #007bff;
        }
        .day-number {
            font-weight: bold;
            margin-bottom: 5px;
            font-size: 14px;
        }
        .day-events {
            font-size: 10px;
            line-height: 1.2;
        }
        .day-event {
            background-color: #007bff;
            color: white;
            padding: 1px 3px;
            margin: 1px 0;
            border-radius: 2px;
            font-size: 9px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            cursor: pointer;
        }
        .day-event:hover {
            background-color: #0056b3;
        }
        .day-event-count {
            color: #666;
            font-size: 9px;
            margin-top: 2px;
        }
        .view-toggle {
            display: flex;
            gap: 10px;
            margin-bottom: 20px;
            justify-content: center;
        }
        .toggle-btn {
            background-color: #f8f9fa;
            border: 1px solid #ddd;
            padding: 8px 16px;
            border-radius: 5px;
            cursor: pointer;
            transition: all 0.2s ease;
        }
        .toggle-btn.active {
            background-color: #007bff;
            color: white;
            border-color: #007bff;
        }
        .toggle-btn:hover {
            background-color: #e9ecef;
        }
        .toggle-btn.active:hover {
            background-color: #0056b3;
        }
        .list-view {
            display: block;
        }
        .calendar-view {
            display: none;
        }
        .calendar-view.active {
            display: block;
        }
        .list-view.active {
            display: block;
        }
        .event-popup {
            position: absolute;
            background-color: white;
            border: 1px solid #ddd;
            border-radius: 5px;
            padding: 10px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            z-index: 6000;
            max-width: 250px;
            font-size: 12px;
            display: none;
        }
        .event-popup .popup-title {
            font-weight: bold;
            margin-bottom: 5px;
            color: #333;
        }
        .event-popup .popup-time {
            color: #007bff;
            margin-bottom: 5px;
        }
        .event-popup .popup-details {
            color: #666;
        }
        .loading {
            text-align: center;
            padding: 20px;
            color: #666;
        }
        @media (max-width: 768px) {
            .modal-content {
                margin: 5% auto;
                width: 95%;
                padding: 15px;
            }
            .event {
                padding: 12px;
            }
        }
        .instructions {
            background-color: #e7f3ff;
            border: 1px solid #b3d9ff;
            border-radius: 8px;
            padding: 20px;
            margin-top: 30px;
        }
        .instructions h2 {
            color: #0056b3;
            margin-top: 0;
        }
        .instructions ol {
            margin: 10px 0;
            padding-left: 20px;
        }
        .instructions li {
            margin-bottom: 8px;
        }
        .last-updated {
            text-align: center;
            color: #999;
            font-size: 12px;
            margin-top: 30px;
        }
        .total-games {
            text-align: center;
            color: #666;
            margin-bottom: 20px;
            font-style: italic;
        }
        /* Emoji support fallback */
        .emoji {
            font-family: "Noto Color Emoji", "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Twemoji Mozilla", sans-serif;
            font-size: 1.2em;
        }
        /* Ensure emojis are displayed properly across browsers */
        h1, .event-details {
            font-feature-settings: "liga" 1, "kern" 1;
            text-rendering: optimizeLegibility;
        }
        /* Ensure dropdown can overlay following list items */
        .calendar-item.open { z-index: 3000; }
        .dropdown-content { z-index: 100000; }
        /* Ensure full calendar fits inside modal with equal column widths */
        *, *::before, *::after { box-sizing: border-box; }
        .calendar-modal .modal-content { width: 95vw; max-width: 1200px; }
        .calendar-view { overflow-x: hidden; }
        .calendar-grid { grid-template-columns: repeat(7, minmax(0, 1fr)); width:100%; margin:0 auto; }
        .calendar-grid > .calendar-day-header, .calendar-grid > .calendar-day { min-width:0; }
        @media (max-width: 900px) { .calendar-modal .modal-content { width:98vw; } }
        /* Slightly reduce padding for better fit */
        .calendar-day { padding:4px; }
    </style>
</head>
<body>
    <div class="container">
        <h1><span class="emoji">🏀</span> Melissia BC</h1>
        <p class="subtitle">Ημερολόγια Αγώνων 2025-26</p>

        {% if total_games > 0 %}
        <p class="total-games">Σύνολο: {{ total_games }} αγώνες σε {{ tmimata_count }} {{ 'τμήμα' if tmimata_count == 1 else 'τμήματα' }}</p>
        {% endif %}

        <ul class="calendar-list">
        {% for cal in calendars %}
            <li class="calendar-item{% if '📅' in cal.name %} combined{% endif %}">
                <div class="calendar-info">
                    <h3>{{ cal.name }}</h3>
                    <p>{{ cal.games }} {{ 'αγώνας' if cal.games == 1 else 'αγώνες' }}</p>
                </div>
                <div class="actions">
                    <button class="view-btn" onclick="viewCalendar('{{ cal.filename }}', '{{ cal.name }}')">
                        <span class="btn-ico" aria-hidden="true">
                            <svg viewBox="0 0 24 24">
                                <rect x="3" y="5" width="18" height="16" rx="2" ry="2" fill="none" stroke="currentColor" stroke-width="2"/>
                                <line x1="3" y1="10" x2="21" y2="10" stroke="currentColor" stroke-width="2"/>
                                <line x1="8" y1="3" x2="8" y2="7" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
                                <line x1="16" y1="3" x2="16" y2="7" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
                            </svg>
                        </span>
                        <span>Προβολή</span>
                    </button>
                    <a href="{{ cal.filename }}" class="download-btn" download>
                        <span class="btn-ico" aria-hidden="true">
                            <svg viewBox="0 0 24 24">
                                <path d="M12 3v12" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
                                <path d="M6 11l6 6 6-6" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                <rect x="4" y="19" width="16" height="2" rx="1" fill="currentColor"/>
                            </svg>
                        </span>
                        <span>Λήψη iCal</span>
                    </a>
                    <div class="quick-add-dropdown">
                        <button class="quick-add-btn" onclick="toggleDropdown(this)">
                            <span class="btn-ico" aria-hidden="true">
                                <svg viewBox="0 0 24 24">
                                    <path d="M12 5v14M5 12h14" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
                                </svg>
                            </span>
                            <span>Προσθήκη σε...</span>
                        </button>
                        <div class="dropdown-content">
                            <a href="#" onclick="addToGoogleCalendar('{{ cal.filename }}', '{{ cal.name }}'); closeDropdown(); return false;">
                                <span class="cal-icon google">G</span>
                                Google Calendar
                            </a>
                            <a href="#" onclick="addToOutlook('{{ cal.filename }}', '{{ cal.name }}'); closeDropdown(); return false;">
                                <span class="cal-icon outlook">O</span>
                                Outlook.com
                            </a>
                            <a href="#" onclick="addToYahoo('{{ cal.filename }}', '{{ cal.name }}'); closeDropdown(); return false;">
                                <span class="cal-icon yahoo">Y!</span>
                                Yahoo Calendar
                            </a>
                            <a href="{{ cal.filename }}" download onclick="showAppleInstructions(); closeDropdown();">
                                <span class="cal-icon apple" aria-hidden="true"></span>
                                Apple Calendar
                            </a>
                        </div>
                    </div>
                </div>
            </li>
        {% endfor %}
        </ul>

        {% if calendars|length == 0 %}
        <p style="text-align: center; color: #666;">Δεν βρέθηκαν αγώνες για τη σεζόν 2025-26.</p>
        {% endif %}

        <div class="instructions">
            <h2>Οδηγίες Χρήσης</h2>
            <h3>🚀 Γρήγορη Προσθήκη</h3>
            <p>Χρησιμοποιήστε το κουμπί <strong>"➕ Προσθήκη σε..."</strong> για άμεση εισαγωγή στο ημερολόγιό σας:</p>
            <ul>
                <li><strong>📧 Google Calendar:</strong> Άνοιγμα σε νέα καρτέλα για συνδρομή</li>
                <li><strong>🏢 Outlook.com:</strong> Άμεση εισαγωγή στο Outlook online</li>
                <li><strong>🟣 Yahoo Calendar:</strong> Οδηγίες για χειροκίνητη εισαγωγή</li>
                <li><strong>🍎 Apple Calendar:</strong> Κατέβασμα με οδηγίες για iPhone/iPad/Mac</li>
            </ul>

            <h3>📱 Εναλλακτικές Μέθοδοι</h3>
            <ol>
                <li><strong>Κλασική Λήψη:</strong> Πατήστε "⬇️ Λήψη iCal" και ανοίξτε το αρχείο</li>
                <li><strong>Προβολή Online:</strong> Πατήστε "📅 Προβολή" για να δείτε τους αγώνες στον browser</li>
            </ol>

            <h3>💡 Συμβουλές</h3>
            <ul>
                <li>Τα ημερολόγια ενημερώνονται αυτόματα όταν προστίθενται νέοι αγώνες</li>
                <li>Κάθε τμήμα έχει το δικό του ημερολόγιο για καλύτερη οργάνωση</li>
                <li>Το ημερολόγιο "📅 Όλα τα Τμήματα" περιλαμβάνει όλους τους αγώνες</li>
            </ul>
        </div>

        <p class="last-updated">Τελευταία ενημέρωση: {{ last_updated }}</p>
    </div>

    <!-- Calendar Modal -->
    <div id="calendarModal" class="calendar-modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal()">&times;</span>
            <h2 id="modalTitle">Ημερολόγιο</h2>
            <div class="view-toggle">
                <button class="toggle-btn" onclick="switchView('list')">Λίστα</button>
                <button class="toggle-btn active" onclick="switchView('calendar')">Ημερολόγιο</button>
            </div>
            <div id="modalContent">
                <div class="loading">Φόρτωση...</div>
            </div>
        </div>
    </div>

    <!-- Event Popup -->
    <div id="eventPopup" class="event-popup">
        <div class="popup-title"></div>
        <div class="popup-time"></div>
        <div class="popup-details"></div>
    </div>

    <script>
        let currentEvents = [];
        let currentView = 'calendar';
        let currentMonth = new Date();

        const monthNames = [
            'Ιανουάριος', 'Φεβρουάριος', 'Μάρτιος', 'Απρίλιος', 'Μάιος', 'Ιούνιος',
            'Ιούλιος', 'Αύγουστος', 'Σεπτέμβριος', 'Οκτώβριος', 'Νοέμβριος', 'Δεκέμβριος'
        ];

        const dayNames = ['Δευ', 'Τρί', 'Τετ', 'Πέμ', 'Παρ', 'Σάβ', 'Κυρ'];

        function viewCalendar(filename, calendarName) {
            const modal = document.getElementById('calendarModal');
            const modalTitle = document.getElementById('modalTitle');
            const modalContent = document.getElementById('modalContent');

            modalTitle.textContent = calendarName;
            modalContent.innerHTML = '<div class="loading">Φόρτωση...</div>';
            modal.style.display = 'block';

            // Reset view toggle
            currentView = 'calendar';
            document.querySelectorAll('.toggle-btn').forEach(btn => btn.classList.remove('active'));
            document.querySelector('.toggle-btn[onclick="switchView(\'calendar\')"]').classList.add('active');

            // Fetch and parse the iCal file
            fetch(filename)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.text();
                })
                .then(icalData => {
                    try {
                        const jcalData = ICAL.parse(icalData);
                        const comp = new ICAL.Component(jcalData);
                        const vevents = comp.getAllSubcomponents('vevent');

                        if (vevents.length === 0) {
                            modalContent.innerHTML = '<p>Δεν βρέθηκαν αγώνες.</p>';
                            return;
                        }

                        // Sort events by date
                        currentEvents = vevents.map(vevent => {
                            const event = new ICAL.Event(vevent);
                            return {
                                summary: event.summary,
                                startDate: event.startDate.toJSDate(),
                                endDate: event.endDate.toJSDate(),
                                description: event.description || '',
                                location: event.location || ''
                            };
                        }).sort((a, b) => a.startDate - b.startDate);

                        // Set current month intelligently: prefer today's month if within range
                        if (currentEvents.length > 0) {
                            const firstEventMonth = new Date(currentEvents[0].startDate.getFullYear(), currentEvents[0].startDate.getMonth(), 1);
                            const lastEventMonthObj = currentEvents[currentEvents.length - 1].startDate;
                            const lastEventMonth = new Date(lastEventMonthObj.getFullYear(), lastEventMonthObj.getMonth(), 1);
                            const today = new Date();
                            const todayMonth = new Date(today.getFullYear(), today.getMonth(), 1);
                            if (todayMonth < firstEventMonth) {
                                currentMonth = firstEventMonth; // season not started yet
                            } else if (todayMonth > lastEventMonth) {
                                currentMonth = lastEventMonth; // season finished
                            } else {
                                currentMonth = todayMonth; // within season
                            }
                        }

                        // Generate calendar view by default
                        renderCalendarView();

                    } catch (parseError) {
                        console.error('Error parsing iCal data:', parseError);
                        modalContent.innerHTML = '<p>Σφάλμα κατά την ανάλυση του ημερολογίου.</p>';
                    }
                })
                .catch(error => {
                    console.error('Error loading calendar:', error);
                    modalContent.innerHTML = '<p>Σφάλμα κατά τη φόρτωση του ημερολογίου.</p>';
                });
        }

        function switchView(view) {
            currentView = view;

            // Update toggle buttons
            document.querySelectorAll('.toggle-btn').forEach(btn => btn.classList.remove('active'));
            document.querySelector(`.toggle-btn[onclick="switchView('${view}')"]`).classList.add('active');

            if (view === 'list') {
                renderListView();
            } else {
                renderCalendarView();
            }
        }

        function renderListView() {
            let html = '<div class="list-view active">';

            currentEvents.forEach(event => {
                const dateStr = event.startDate.toLocaleDateString('el-GR', {
                    weekday: 'long',
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                });
                const timeStr = event.startDate.toLocaleTimeString('el-GR', {
                    hour: '2-digit',
                    minute: '2-digit',
                    hour12: false
                });

                // Clean up description - replace escaped newlines with HTML breaks
                const cleanDescription = event.description
                    .replace(/\\n/g, '<br>')
                    .replace(/\n/g, '<br>');

                html += `
                    <div class="event">
                        <div class="event-title">${event.summary}</div>
                        <div class="event-date">${dateStr} στις ${timeStr}</div>
                        <div class="event-details">
                            ${event.location ? `<span class="emoji">📍</span> ${event.location}<br>` : ''}
                            ${cleanDescription ? cleanDescription : ''}
                        </div>
                    </div>
                `;
            });

            html += '</div>';
            document.getElementById('modalContent').innerHTML = html;
        }

        function renderCalendarView() {
            const year = currentMonth.getFullYear();
            const month = currentMonth.getMonth();

            let html = `
                <div class="calendar-view active">
                    <div class="calendar-header">
                        <button class="month-nav-btn" onclick="navigateMonth(-1)">‹</button>
                        <div class="month-title">${monthNames[month]} ${year}</div>
                        <button class="month-nav-btn" onclick="navigateMonth(1)">›</button>
                    </div>
                    <div class="calendar-grid">
            `;

            // Add day headers
            dayNames.forEach(day => {
                html += `<div class="calendar-day-header">${day}</div>`;
            });

            // Get first day of month and last day of month
            const firstDay = new Date(year, month, 1);
            const lastDay = new Date(year, month + 1, 0);
            const startDate = new Date(firstDay);

            // Adjust to start from Monday (0 = Sunday, 1 = Monday, etc.)
            const dayOfWeek = (firstDay.getDay() + 6) % 7; // Convert Sunday = 0 to Sunday = 6
            startDate.setDate(startDate.getDate() - dayOfWeek);

            // Generate calendar days (6 weeks)
            for (let week = 0; week < 6; week++) {
                for (let day = 0; day < 7; day++) {
                    const currentDate = new Date(startDate);
                    currentDate.setDate(startDate.getDate() + (week * 7) + day);

                    const isCurrentMonth = currentDate.getMonth() === month;
                    const isToday = isDateToday(currentDate);
                    const dayEvents = getEventsForDate(currentDate);

                    let dayClass = 'calendar-day';
                    if (!isCurrentMonth) dayClass += ' other-month';
                    if (isToday) dayClass += ' today';

                    // Use local date (YYYY-MM-DD) without timezone shift
                    const dataDate = `${currentDate.getFullYear()}-${String(currentDate.getMonth()+1).padStart(2,'0')}-${String(currentDate.getDate()).padStart(2,'0')}`;
                    html += `<div class="${dayClass}" data-date="${dataDate}">`;
                    html += `<div class="day-number">${currentDate.getDate()}</div>`;

                    if (dayEvents.length > 0) {
                        html += '<div class="day-events">';
                        const maxVisible = 3;
                        for (let i = 0; i < Math.min(dayEvents.length, maxVisible); i++) {
                            const event = dayEvents[i];
                            const timeStr = event.startDate.toLocaleTimeString('el-GR', {
                                hour: '2-digit',
                                minute: '2-digit',
                                hour12: false
                            });
                            html += `<div class="day-event" data-event-index="${currentEvents.indexOf(event)}" onclick="showEventPopup(${currentEvents.indexOf(event)})" title="${event.summary}">${timeStr} ${event.summary}</div>`;
                        }

                        if (dayEvents.length > maxVisible) {
                            html += `<div class="day-event-count">+${dayEvents.length - maxVisible} ακόμη</div>`;
                        }
                        html += '</div>';
                    }

                    html += '</div>';
                }
            }

            html += `
                    </div>
                </div>
            `;

            document.getElementById('modalContent').innerHTML = html;
        }

        function navigateMonth(direction) {
            currentMonth = new Date(currentMonth.getFullYear(), currentMonth.getMonth() + direction, 1);
            renderCalendarView();
        }

        // Helper: compare dates in local time (ignoring time portion)
        function isSameLocalDate(a, b) {
            return a.getFullYear() === b.getFullYear() &&
                   a.getMonth() === b.getMonth() &&
                   a.getDate() === b.getDate();
        }

        function getEventsForDate(date) {
            return currentEvents.filter(event => isSameLocalDate(event.startDate, date));
        }

        function isDateToday(date) {
            const today = new Date();
            return isSameLocalDate(date, today);
        }

        function showEventPopup(eventIndex) {
            const popup = document.getElementById('eventPopup');
            const eventObj = currentEvents[eventIndex];

            const timeStr = eventObj.startDate.toLocaleTimeString('el-GR', {
                hour: '2-digit',
                minute: '2-digit',
                hour12: false
            });

            const cleanDescription = eventObj.description
                .replace(/\\n/g, '<br>')
                .replace(/\n/g, '<br>');

            popup.querySelector('.popup-title').textContent = eventObj.summary;
            popup.querySelector('.popup-time').textContent = timeStr;
            popup.querySelector('.popup-details').innerHTML =
                (eventObj.location ? `📍 ${eventObj.location}<br>` : '') +
                (cleanDescription ? cleanDescription : '');

            // Position popup near mouse
            popup.style.display = 'block';
            popup.style.left = '50%';
            popup.style.top = '50%';
            popup.style.transform = 'translate(-50%, -50%)';

            // Hide popup after 3 seconds or on click elsewhere
            setTimeout(() => {
                popup.style.display = 'none';
            }, 3000);
        }

        function closeModal() {
            document.getElementById('calendarModal').style.display = 'none';
            document.getElementById('eventPopup').style.display = 'none';
        }

        // Close modal when clicking outside of it
        window.onclick = function(event) {
            const modal = document.getElementById('calendarModal');
            const popup = document.getElementById('eventPopup');

            if (event.target === modal) {
                modal.style.display = 'none';
            }

            if (popup.style.display === 'block' && !popup.contains(event.target)) {
                popup.style.display = 'none';
            }
        }

        // Close modal with Escape key
        document.addEventListener('keydown', function(event) {
            if (event.key === 'Escape') {
                closeModal();
            }
        });

        // Calendar integration functions
        function buildAbsoluteIcsUrl(filename) {
            try {
                return new URL(filename, document.baseURI).href;
            } catch (e) {
                return window.location.origin + window.location.pathname.replace('index.html', '') + filename;
            }
        }

        function addToGoogleCalendar(filename, calendarName) {
            const absIcsUrl = buildAbsoluteIcsUrl(filename);
            if (absIcsUrl.startsWith('file:')) {
                alert('Ανοίξτε τη σελίδα από ένα δημόσιο URL (όχι file://) ώστε το Google να μπορέσει να διαβάσει το .ics.');
                return;
            }
            const googleUrl = `https://calendar.google.com/calendar/render?cid=${encodeURIComponent(absIcsUrl)}`;
            window.open(googleUrl, '_blank', 'noopener');
        }

        function addToOutlook(filename, calendarName) {
            const absIcsUrl = buildAbsoluteIcsUrl(filename);
            if (absIcsUrl.startsWith('file:')) {
                alert('Ανοίξτε τη σελίδα από ένα δημόσιο URL (όχι file://) ώστε το Outlook να μπορέσει να διαβάσει το .ics.');
                return;
            }
            const outlookUrl = `https://outlook.live.com/calendar/0/addfromweb/?url=${encodeURIComponent(absIcsUrl)}&name=${encodeURIComponent(calendarName)}`;
            window.open(outlookUrl, '_blank', 'noopener');
        }

        function addToYahoo(filename, calendarName) {
            const absIcsUrl = buildAbsoluteIcsUrl(filename);
            const message = `Για το Yahoo Calendar:\n\n` +
                `1. Αντιγράψτε αυτό το URL:\n${absIcsUrl}\n\n` +
                `2. Πηγαίνετε στο Yahoo Calendar\n` +
                `3. Κάντε κλικ στο εικονίδιο ⚙️ (Ρυθμίσεις)\n` +
                `4. Επιλέξτε "Subscribe" ή "Εγγραφή σε ημερολόγιο"\n` +
                `5. Επικολλήστε το URL και δώστε όνομα: ${calendarName}`;
            if (navigator.clipboard && window.isSecureContext) {
                navigator.clipboard.writeText(absIcsUrl).then(() => {
                    alert(message + '\n\n✅ Το URL αντιγράφηκε στο clipboard!');
                }).catch(() => {
                    alert(message);
                });
            } else {
                alert(message);
            }
        }

        function showAppleInstructions() {
            setTimeout(() => {
                alert(`Για το Apple Calendar:\n\n📱 iPhone/iPad:\n• Το αρχείο θα ανοίξει αυτόματα στο Calendar app\n• Επιλέξτε "Προσθήκη" για να το εισάγετε\n\n💻 Mac:\n• Κάντε διπλό κλικ στο αρχείο .ics\n• Το Calendar app θα ανοίξει και θα ρωτήσει για εισαγωγή\n• Επιλέξτε το ημερολόγιο που θέλετε να προσθέσετε τους αγώνες`);
            }, 100);
        }

        // Get current page URL without filename for calendar URLs
        function getCurrentBaseUrl() {
            const url = window.location.href;
            return url.substring(0, url.lastIndexOf('/') + 1);
        }

        // Dropdown functionality for mobile/desktop with stacking fix
        function toggleDropdown(button) {
            const dropdown = button.nextElementSibling;
            const item = button.closest('.calendar-item');
            const isVisible = dropdown.classList.contains('show');

            // Close all others
            document.querySelectorAll('.calendar-item.open').forEach(it => {
                if (it !== item) {
                    it.classList.remove('open');
                    const dc = it.querySelector('.dropdown-content.show');
                    if (dc) dc.classList.remove('show');
                }
            });

            if (isVisible) {
                dropdown.classList.remove('show');
                item.classList.remove('open');
            } else {
                dropdown.classList.add('show');
                item.classList.add('open');
            }
        }

        function closeDropdown() {
            document.querySelectorAll('.calendar-item.open').forEach(it => it.classList.remove('open'));
            document.querySelectorAll('.dropdown-content.show').forEach(d => d.classList.remove('show'));
        }

        // Close dropdowns when clicking outside
        document.addEventListener('click', function(event) {
            if (!event.target.closest('.quick-add-dropdown')) {
                closeDropdown();
            }
        });
    </script>
</body>
</html>
